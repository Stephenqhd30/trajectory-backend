# 公共配置文件
# @author stephen qiu
spring:
  application:
    name: trajectory-backend
  # 默认 dev 环境
  config:
    activate:
      on-profile: default
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # 缓存
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterAccess=600s
  # session 配置
  session:
    # 开启分布式 session（须先配置 Redis）
    store-type: redis
    # 30 天过期
    timeout: 2592000
  # 数据库配置
  datasource:
    driver-class-name: ${dev.mysql.datasource.driver-class-name}
    url: ${dev.mysql.datasource.url}
    username: ${dev.mysql.datasource.username}
    password: ${dev.mysql.datasource.password}
  # Redis 配置
  # todo 需替换配置，然后取消注释
  redis:
    database: ${dev.redis.database}
    host: ${dev.redis.host}
    port: ${dev.redis.port}
    timeout: ${dev.redis.timeout}
  # Elasticsearch 配置
  # todo 需替换配置，然后取消注释
  elasticsearch:
    uris: ${dev.elasticsearch.uris}
  # RabbitMQ配置
  rabbitmq:
    # todo 是否开启RabbitMQ（预先关闭）
    enable: true
    host: ${dev.rabbitmq.host}
    port: ${dev.rabbitmq.port}
    username: ${dev.rabbitmq.username}
    password: ${dev.rabbitmq.password}
    max-await-timeout: 3000
    # 虚拟主机
    virtual-host: /
    # 消息确认（ACK）
    publisher-confirm-type: correlated #确认消息已发送到交换机(Exchange)
    publisher-returns: true #确认消息已发送到队列(Queue)
    template:
      mandatory: true
    # 是否手动ACK
    listener:
      type: simple
      direct:
        acknowledge-mode: manual
      simple:
        acknowledge-mode: manual
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB
server:
  address: 0.0.0.0
  port: 8080
  servlet:
    context-path: /api
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
# MyBatis Plus 配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）

# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    description: "StephenQiu的接口文档信息。"
    concat: "Stephen Qiu"
    email: "popcornqhd@gmail.com"
    url: "https://github.com/Stephenqhd30"
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.stephen.trajectory.controller
          - com.stephen.trajectory.elasticsearch.controller

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # todo 是否启用SaToken认证鉴权功能（此处为false并不是禁用SaToken，而是让SaToken相关注解失效，预先开启）
  enable-sa: true
  # todo 是否使用JWT格式的Token（建议如果没有开启redis配置就不要开启JWT格式的Token，预先关闭）
  enable-jwt: true
  # token 名称（同时也是 cookie 名称）
  token-name: Authorization
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # token前缀  注意必须是 Bearer {token}, Bearer后面加空格
  token-prefix: Bearer
  # jwt秘钥
  jwt-secret-key: ${dev.sa-token.jwt-secret-key}

# Redisson 配置
redisson:
  enabled: true
  database: ${dev.redisson.database}
  host: ${dev.redisson.host}
  port: ${dev.redisson.port}
# 对象存储配置
oss:
  # MinIO OSS配置
  minio:
    # todo 是否开启
    enable: true
    # 域名（格式：【ip:port】）
    endpoint: ${dev.oss.minio.endpoint}
    # 用户的 AccessKey
    accessKey: ${dev.oss.minio.accessKey}
    # 用户的 SecretKey
    secretKey: ${dev.oss.minio.secretKey}
    # 桶名称
    bucket: ${dev.oss.minio.bucket}

# WebSocket配置
websocket:
  # todo 是否开启（预先关闭）
  enable: false
  # websocket服务端口
  port: 39999
  # BOSS线程组线程数
  boss-thread: 4
  # WORKER线程组线程数
  worker-thread: 16

#  Caffeine配置
caffeine:
  # todo 是否开启（预先关闭）
  enable: true
  # 最后一次写入或访问后经过固定时间过期，单位：秒
  expired: 120
  # 缓存初始容量
  initCapacity: 256
  # 缓存最大容量，超过之后会按照最近最少策略进行缓存剔除
  maxCapacity: 1000
  # 是否允许空值null作为缓存的value
  allowNullValue: true

# DeepSeek配置
deepseek:
  enabled: true
  baseUrl: ${dev.deepseek.baseUrl}
  apiKey: ${dev.deepseek.apiKey}


